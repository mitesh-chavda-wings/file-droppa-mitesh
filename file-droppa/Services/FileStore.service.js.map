{"version":3,"sources":["../../lib/Services/FileStore.service.ts"],"names":[],"mappings":"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","file":"FileStore.service.js","sourceRoot":"","sourcesContent":["import {Injectable, EventEmitter} from \"@angular/core\";\nimport {FileUpload} from \"./FileUpload.service\";\nimport {iFile} from \"./FileWrapper.service\";\nimport {FileWrapper} from \"./FileWrapper.service\";\n\n\nexport class FilesStore {\n    public filesUpdated = new EventEmitter(true);\n    public startAutoUploading = null;\n    public beforeAddFile:any = null;\n\n    private WSfiles:WeakSet<File> = new WeakSet();\n    private _iFiles:Array<iFile> = [];\n\n    public get files():Array<File> {\n        return this.iFiles.reduce((res, iFile:iFile)=> {\n            res.push(iFile.File);\n            return res;\n        }, []);\n    }\n\n    public get iFiles() {\n        return this._iFiles;\n    }\n\n    public set iFiles(files) {\n        this._iFiles = files;\n    }\n\n    public addFiles(files):void {\n        files = files.filter((file)=> {\n            if (!this.WSfiles.has(file)) {\n                if(typeof this.beforeAddFile === \"function\" && this.beforeAddFile(file)){\n                    this.WSfiles.add(file);\n                    return true;\n                } else if(typeof this.beforeAddFile !== \"function\") {\n                    return true;\n                }\n                return false;\n            }\n        }).map((file)=> {\n            let iFile = new FileWrapper(file);\n            this.startAutoUploading && this.startAutoUploading(iFile);\n            return iFile;\n        });\n        this.iFiles = [...this.iFiles, ...files];\n        this.filesUpdated.emit(true);\n    }\n\n    public removeFiles(iFile:iFile):void {\n        this.WSfiles.delete(iFile.File);\n        this.iFiles = this.iFiles.filter((item)=>{\n            return item.id !== iFile.id;\n        });\n        this.filesUpdated.emit(true);\n    }\n\n    public clearStore():void {\n        this.iFiles.forEach((iFile)=> {\n            this.WSfiles.delete(iFile.File);\n        });\n        this.iFiles = [];\n        this.filesUpdated.emit(true);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}