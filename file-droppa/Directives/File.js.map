{"version":3,"sources":["../../lib/Directives/File.ts"],"names":[],"mappings":"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","file":"File.js","sourceRoot":"","sourcesContent":["import {\n    Component, Input, Output, EventEmitter\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\nimport {GetSizePipe} from '../Pipes/GetSize.pipe';\n\n\n\nexport class File {\n    public ext:string = '';\n    public previewSrc:string = '';\n    public fileName:string = '';\n    //TODO: workaround - depends on strict values;\n    public previewHeight:number = 75;\n\n\n    //ngHooks\n    ngAfterContentInit() {\n        this.file && this.getFileType();\n    }\n\n     file;\n     index;\n     percentage;\n     loadingSuccessful;\n     responseMessage;\n\n     removeFile = new EventEmitter(true);\n\n\n    removeFileListener(e) {\n        e.preventDefault();\n        this.removeFile && this.removeFile.emit(true);\n    }\n\n    getFileType() {\n        let imageType = /^image\\//,\n            reader;\n\n        if (!imageType.test(this.file.type)) {\n            let ext = this.file.name.split('.').pop();\n\n            this.fileName = this.file.name;\n            this.ext = ext.length > 3\n                ? 'file'\n                : `.${ext}`;\n            return;\n        }\n\n        reader = new FileReader();\n\n        reader.addEventListener(\"load\", () => {\n            let img = new Image,\n                result = reader.result;\n\n            img.onload = () => {\n                let ratio = img.height / img.width,\n                    scaledHeight = ratio * this.previewHeight;\n\n                this.previewSrc = result;\n                this.previewHeight = (scaledHeight < this.previewHeight)\n                    ? this.previewHeight\n                    : scaledHeight;\n            };\n\n            img.src = result;\n        }, false);\n\n        if (this.file) {\n            reader.readAsDataURL(this.file);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'fileItem',\n    styles: [`\n        .file-container {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            width: 75px;\n            margin: 20px 10px 0 0;\n            transition: opacity 0.5s, margin 0.5s linear;\n            flex-direction: column;\n            position:relative;\n        }\n\n        .file-container.uploaded {\n            opacity: 0;\n            margin: 0;\n            height: 0;\n            overflow: hidden;\n        }\n\n        .flex-block {\n            width: 90%;\n            text-align: center;\n            font-size: 0.8em;\n            margin: 2px 0;\n        }\n\n        .file-remove {\n            cursor: pointer;\n            position: absolute;\n            left: 87%;\n            top: 8px;\n        }\n        .file-upload-error {\n            position: absolute;\n            top: 8px;\n            left:-8px;\n        }\n        .file-name {\n            text-overflow: ellipsis;\n            overflow: hidden;\n        }\n\n        .file-preview {\n            background: #ccc;\n            border-radius: 2px;\n            width: inherit;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n            background-size: cover;\n            color: #fff;\n        }\n\n         .file-preview-ext {\n            text-transform: uppercase;\n        }\n\n        .file-progress {\n            width: 80%;\n            display: block;\n        }\n\n\n        button {\n            margin: 0;\n        }\n\nspan {\n    position:relative;\n    z-index:1;\n    overflow:hidden;\n    list-style:none;\n    padding:0;\n    margin:0 0 0.25em;\n}\n\nspan a:link {\n    display:block;\n    border:0;\n    padding-left:28px;\n    color:#c55500;\n}\n\nspan a:hover,\nspan a:focus {\n    color:#730800;\n    background:transparent;\n}\n\nspan:before,\nspan:after,\nspan a:before,\nspan a:after {\n    content:\"\";\n    position:absolute;\n    top:50%;\n    left:0;\n}\n\nspan a:before,\nspan a:after {\n    margin:-8px 0 0;\n    background:#c55500;\n}\n\nspan a:hover:before,\nspan a:focus:before {\n    background:#730800;\n}\n\n\n.remove a:before {\n    width:16px;\n    height:16px;\n    /* css3 */\n    -webkit-border-radius:16px;\n    -moz-border-radius:16px;\n    border-radius:16px;\n}\n\n.remove a:after {\n    left:3px;\n    width:10px;\n    height:2px;\n    margin-top:-1px;\n    background:#fff;\n}\n.warning:before {\n    content:\"!\";\n    z-index:2;\n    left:8px;\n    margin-top:-8px;\n    font-size:14px;\n    font-weight:bold;\n    color:#000;\n}\n\n.warning:after {\n    z-index:1;\n    border-width:0 11px 18px;\n    border-style:solid;\n    border-color:#F8D201 transparent;\n    margin-top:-10px;\n    background:transparent;\n}\n\n.file-upload-error .tooltiptext {\n    visibility: hidden;\n    white-space:nowrap;\n    background-color: black;\n    color: #fff;\n    text-align: center;\n    padding: 5px;\n    border-radius: 6px;\n\n    /* Position the tooltip text - see examples below! */\n    position: absolute;\n    z-index: 1;\n}\n\n.file-upload-error:hover .tooltiptext {\n    visibility: visible;\n}\n\n    `],\n    template: `\n        <div *ngIf=\"file\" class=\"file-container\">\n            <div class=\"flex-block file-preview\" [ngStyle]=\"{'background-image': 'url(' + previewSrc + ')', 'height': previewHeight + 'px'}\">\n                <div *ngIf=\"ext\" class=\"flex-block file-preview-ext \">{{ext}}</div>\n                <div *ngIf=\"!previewSrc\" class=\"flex-block file-name\">{{fileName}}</div>\n                <progress [value]=\"percentage\" max=\"100\" class=\"file-progress\"></progress>\n            </div>\n            <div class=\"file-remove\">\n                <span class=\"remove\"><a href=\"#\" (click)=\"removeFileListener($event)\"></a></span>\n            </div>\n            <div *ngIf=\"!loadingSuccessful\" class=\"file-upload-error\">\n                <span class=\"warning\"></span>\n                <span *ngIf=\"responseMessage\" class=\"tooltiptext\">{{responseMessage}}</span>\n            </div>\n            <div class=\"flex-block\">{{file.size | getSize }}</div>\n        </div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'file': [{ type: Input },],\n'index': [{ type: Input },],\n'percentage': [{ type: Input },],\n'loadingSuccessful': [{ type: Input },],\n'responseMessage': [{ type: Input },],\n'removeFile': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}