{"version":3,"sources":["../../lib/Directives/FileDroppa.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,YAAA,EAAc,MAAA,EAAQ,iBAAA,EAAkB,MAAM,eAAA,CAAgB;AAGxF,OAAO,EAAA,UAAE,EAAU,MAAM,+BAAA,CAAgC;AAEzD,OAAO,EAAA,UAAE,EAAU,MAAM,gCAAA,CAAiC;AAG1D;IA4BI,oBAAmB,UAAqB,EAAU,iBAA6B;QAA/E,iBAcC;QAdkB,eAAU,GAAV,UAAU,CAAW;QAAU,sBAAiB,GAAjB,iBAAiB,CAAY;QA3B9E,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QAC3B,kBAAa,GAAY,IAAI,CAAC;QAI9B,qBAAgB,GAAY,IAAI,CAAC;QACjC,kBAAa,GAAY,IAAI,CAAC;QAC9B,qBAAgB,GAAU,+FAI1B,CAAC;QACD,iBAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACtC,iBAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACtC,yBAAoB,GAAU,4GAI9B,CAAC;QACD,yBAAoB,GAAU,yGAI9B,CAAC;QACD,aAAQ,GAAW,IAAI,CAAC;QAGrB,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QACH,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,EAA0B;gBAAzB,eAAO,EAAE,gBAAQ,EAAE,aAAK;YACpE,EAAE,CAAA,CAAC,OAAO,CAAC,CAAA,CAAC;gBACR,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAChC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;YAC/B,CAAC;YACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,CAAC;IAtCA,sBAAI,2BAAG;aAAP,UAAQ,MAAc;YACrB,IAAI,CAAC,iBAAiB,CAAC,GAAG,GAAG,MAAM,CAAC;QACtC,CAAC;;;OAAA;IAsCO,uCAAkB,GAA1B,UAA2B,KAAK;QAC5B,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAChE,CAAC;IAED;;OAEG;IACH,6BAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,CAAC,OAAO,IAAI,CAAC,aAAa,KAAG,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,UAAC,IAAI,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC;QAC/G,IAAI,CAAC,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC1D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,CAAC,OAAO,IAAI,CAAC,gBAAgB,KAAG,UAAU,CAAC,GAAG,IAAI,CAAC,gBAAgB,GAAG,UAAC,QAAQ,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC;IACvI,CAAC;IAED,mCAAc,GAAd;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAED,mCAAc,GAAd;QACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IA0GL,iBAAC;AAAD,CAzKA,AAyKC;;AAzGM,qBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,YAAY;gBACtB,SAAS,EAAC,CAAC,UAAU,EAAE,UAAU,CAAC;gBAClC,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,MAAM,EAAC,CAAC,ivCAuDH;iBACJ;gBACD,QAAQ,EAAE,4kCAqBT;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,yBAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAH6F,CAG7F,CAAC;AACK,yBAAc,GAA2C;IAChE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,sBAAsB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1C,sBAAsB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1C,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC7B,CAAC","file":"FileDroppa.js","sourceRoot":"","sourcesContent":["import {Component, Input, EventEmitter, Output, ViewEncapsulation} from '@angular/core';\nimport {FileDropZone} from './FileDropZone';\nimport {FileList} from './FileList';\nimport {FilesStore} from \"../Services/FileStore.service\";\nimport {File} from \"./File\";\nimport {FileUpload} from \"../Services/FileUpload.service\";\n\n\nexport class FileDroppa {\n     showFilesList:boolean = true;\n     autoUpload:boolean = false;\n     beforeRequest:Function = null;\n     set url(tmpUrl: string) {\n      this.fileUploadService.url = tmpUrl;\n    }\n     beforeFileUpload:Function = null;\n     beforeAddFile:Function = null;\n     dropZoneTemplate:string = `\n      <div class=\"file_dropZone_internal\">\n          Drop Files Here\n      </div>\n    `;\n     filesUpdated = new EventEmitter(true);\n     fileUploaded = new EventEmitter(true);\n     uploadButtonTemplate:string = `\n      <div class=\"file-droppa-btn orange\">\n        <span>Upload All Files</span>\n       </div>\n    `;\n     removeButtonTemplate:string = `\n      <div class=\"file-droppa-btn red\">\n        <span>Remove All Files</span>\n       </div>\n    `;\n     multiple:boolean = true;\n\n    constructor(public filesStore:FilesStore, private fileUploadService: FileUpload){\n        filesStore.filesUpdated.subscribe(()=>{\n            this.filesUpdated.emit(filesStore.files);\n        });\n        fileUploadService.fileUploadedEvent.subscribe(([success, response, iFile])=>{\n            if(success){\n                this.filesStore.removeFiles(iFile);\n            } else {\n                iFile.loadingSuccessful = false;\n                iFile.responseText = false;\n            }\n            this.fileUploaded.emit([success, response, iFile.file]);\n        });\n        filesStore.startAutoUploading = this.startAutoUploading.bind(this);\n    }\n\n    private startAutoUploading(iFile){\n        this.autoUpload && this.fileUploadService.uploadFile(iFile);\n    }\n\n    /**\n     * We got to pass Input parameters to Service instances\n     */\n    ngOnInit(){\n        this.filesStore.beforeAddFile = (typeof this.beforeAddFile===\"function\") ? this.beforeAddFile : (file) => true;\n        this.fileUploadService.beforeRequest = this.beforeRequest;\n        this.fileUploadService.beforeFileUpload = (typeof this.beforeFileUpload===\"function\") ? this.beforeFileUpload : (formData) => true;\n    }\n\n    removeAllFiles() {\n        this.filesStore.clearStore();\n    }\n\n    uploadAllFiles() {\n        this.fileUploadService.uploadFiles(this.filesStore.iFiles);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'fileDroppa',\n    providers:[FilesStore, FileUpload],\n    encapsulation: ViewEncapsulation.None,\n    styles:[`\n        .file-droppa-container {\n            width: 400px;\n        }\n        .file-droppa-btns {\n         display: flex;\n          align-items: center;\n          justify-content: center;\n\n        }\n        .file-droppa-btn {\n              margin: 15px;\n              padding: 0;\n\n              overflow: hidden;\n\n              border-width: 0;\n              outline: none;\n              border-radius: 2px;\n              box-shadow: 0 1px 4px rgba(0, 0, 0, .6);\n\n              background-color: #2ecc71;\n              color: #ecf0f1;\n\n              transition: background-color .3s;\n              width: 140px;\n              text-align: center;\n              font-size: 12px;\n\n        }\n\n        .file-droppa-btn:hover{\n          background-color: #27ae60;\n        }\n\n        .file-droppa-btn span {\n          display: block;\n          padding: 12px 24px;\n        }\n\n        .file-droppa-btn.orange {\n          background-color: #e67e22;\n        }\n\n        .file-droppa-btn.orange:hover {\n          background-color: #d35400;\n        }\n\n        .file-droppa-btn.red {\n          background-color: #e74c3c;\n        }\n\n        .file-droppa-btn.red:hover{\n          background-color: #c0392b;\n        }\n        `\n    ],\n    template: `\n        <div class=\"file-droppa-container\">\n            <fileDropZone [multiple]=\"multiple\">\n                <div [innerHTML]=\"dropZoneTemplate\"></div>\n            </fileDropZone>\n            <br/>\n            <ng-content></ng-content>\n            <fileList *ngIf=\"showFilesList\"></fileList>\n            <div class=\"file-droppa-btns\" *ngIf=\"filesStore.iFiles.length\">\n              <div #uploadButtonArea (click)=\"uploadAllFiles($event)\">\n                <ng-content select=\"[upload-button]\"></ng-content>\n              </div>\n              <div *ngIf=\"uploadButtonArea.children.length === 0\" (click)=\"uploadAllFiles($event)\"\n                   [innerHTML]=\"uploadButtonTemplate\"></div>\n              <div #removeButtonArea (click)=\"removeAllFiles($event)\">\n                <ng-content select=\"[remove-button]\"></ng-content>\n              </div>\n              <div *ngIf=\"removeButtonArea.children.length === 0\" (click)=\"removeAllFiles($event)\"\n                   [innerHTML]=\"removeButtonTemplate\"></div>\n            </div>\n        </div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilesStore, },\n{type: FileUpload, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showFilesList': [{ type: Input },],\n'autoUpload': [{ type: Input },],\n'beforeRequest': [{ type: Input },],\n'url': [{ type: Input },],\n'beforeFileUpload': [{ type: Input },],\n'beforeAddFile': [{ type: Input },],\n'dropZoneTemplate': [{ type: Input },],\n'filesUpdated': [{ type: Output },],\n'fileUploaded': [{ type: Output },],\n'uploadButtonTemplate': [{ type: Input },],\n'removeButtonTemplate': [{ type: Input },],\n'multiple': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}